template: true   # required for local templates
valuesFilePath: ./values.yml

resources:
  - name: {{ .Values.primaryResource }}
    type: GitRepo
    configuration:
      path: {{ .Values.repoPath }}
      gitProvider: {{ .Values.gitProvider }}
      branches:
        include: ^{{ .Values.mainBranch }}$
      cloneProtocol: {{ .Values.protocol }}
      buildOn:
        commit: {{ .Values.buildOnCommit }}

pipelines:
  - name: {{ .Values.pipelineName }}
    configuration:
      jfrogCliVersion: 2
      {{ if .Values.nodePool }}
      nodePool: {{ .Values.nodePool }}
      {{ end }}
      environmentVariables:
        readOnly:
          JFROG_TASK_DEBUG: "true"
          JFROG_CLI_LOG_LEVEL: debug
    steps:
      - name: test_{{.Values.taskName }}
        type: Bash
        configuration:
          inputResources:
            - name: {{ .Values.primaryResource }}
          integrations:
            - name: {{ .Values.artifactoryIntegration }}
        execution:
          onStart:
            - echo "Starting execution on {{ .Values.taskName }}"
            - task: jfrog/setup-go@latest
              input:
                version: "1.20.5" 
            - pushd $res_{{ .Values.primaryResource }}_resourcePath
          onExecute:
            - task: $res_{{ .Values.primaryResource }}_resourcePath
              id: mytask
              input:
                user: "dev"
            - echo ${OUT_mytask_message}
          onFailure:
            - echo "Task Test failed"
          onSuccess:
            - echo "Test Task execution is successful"
          onComplete:
            - echo "Test Task execution completed."
  {{ if .Values.windowsNodePool }}
  - name: {{ .Values.pipelineName }}_windows
    configuration:
      jfrogCliVersion: 2
      nodePool: {{ .Values.windowsNodePool }}
      environmentVariables:
        readOnly:
          JFROG_TASK_DEBUG: "true"
          JFROG_CLI_LOG_LEVEL: debug
    steps:
      - name: test_{{.Values.taskName }}
        type: Powershell
        configuration:
          inputResources:
            - name: {{ .Values.primaryResource }}
          integrations:
            - name: {{ .Values.artifactoryIntegration }}
        execution:
          onStart:
            - echo "Starting execution on {{ .Values.taskName }}"
          onExecute:
            - task: $res_{{ .Values.primaryResource }}_resourcePath
              id: my-awesome-task
              input:
                input1:
                input2:
          onFailure:
            - echo "Task Test failed"
          onSuccess:
            - echo "Test Task execution is successful"
          onComplete:
            - echo "Test Task execution completed."
  {{end}}